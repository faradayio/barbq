SQL:
    Exp (the constructor here takes pretty much anything, we put all the complexity here):
        Col (has to be explicitly constructed):
            StrCol (opt-in schema annotations for free)
            IntCol
            ArrayCol
        Lit (this is the default Exp if we use a python literal)
        Func (never used, but is the superclass for all the FUNCs)

operator / method / usage: + - / * & | == ??? (we want to make sure everything is possible) TODO
AND / __and__ / E


literal types: str, int, array, obj. note that string functions as a good default TODO
because it is fully flexible

Func subclasses: the functions are all listed nicely in the BQ reference
we don't care about most of these, so we just need to autogen a shitload of
prototypes, but what is the general form?

class FUNC(Func):
    _args: List[Exp]

    def __serialize_(self):
        return []

    def __init__(self, *args: List[Exp]):
        # fills self._args with *args

we can't use this whenever a function doesn't use comma-separated args

list of all FUNCs from https://cloud.google.com/bigquery/docs/reference/standard-sql/syntax: TODO